daemon off;

error_log /dev/stdout info;

events {
    worker_connections 1024;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        application stream {
            live on;
            
            exec ffmpeg -i rtmp://localhost:1935/stream/$name
              -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -g 30 -r 30 -s 1280x720 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_720p2628kbs
              -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 750k -f flv -g 30 -r 30 -s 640x360 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_360p878kbs
              -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 400k -f flv -g 30 -r 30 -s 426x240 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_240p528kbs;
        }

        application hls {
            live on;
            hls on;
            hls_fragment_naming system;
            hls_fragment 2;
            hls_playlist_length 6;
            hls_path /opt/data/hls;
            hls_nested on;

            deny play all;
            
            hls_variant _720p2628kbs BANDWIDTH=2628000,RESOLUTION=1280x720;
            hls_variant _360p878kbs BANDWIDTH=878000,RESOLUTION=640x360;
            hls_variant _240p528kbs BANDWIDTH=528000,RESOLUTION=426x240;
        }
        
    }
}

http {
    root /www/static;
    sendfile off;
    tcp_nopush on;
    server_tokens off;
    access_log /dev/stdout combined;

    # Uncomment these lines to enable SSL.
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    # ssl_prefer_server_ciphers off;
    # ssl_session_cache shared:SSL:10m;
    # ssl_session_timeout 1d;

    server {
        listen 81;
        #server_name example.com;

        # Uncomment these lines to enable SSL.
        # Update the ssl paths with your own certificate and private key.
            
        # listen 443 ssl;
        # ssl_certificate     /opt/certs/example.com.crt;
        # ssl_certificate_key /opt/certs/example.com.key;
	
	    if ($arg_pass != 'abc123') {
            return 404;
        }
        
        location / {
		    if ($request_method = 'OPTIONS') {
			    add_header 'Access-Control-Allow-Origin' '*';
			    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			    #
			    # Custom headers and headers various browsers *should* be OK with but aren't
			    #
			    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			    #
			    # Tell client that this pre-flight info is valid for 20 days
			    #
			    add_header 'Access-Control-Max-Age' 1728000;
			    add_header 'Content-Type' 'text/plain; charset=utf-8';
			    add_header 'Content-Length' 0;
			    return 204;
		    }
		    if ($request_method = 'POST') {
			    add_header 'Access-Control-Allow-Origin' '*' always;
			    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		    }
		    if ($request_method = 'GET') {
			    add_header 'Access-Control-Allow-Origin' '*' always;
			    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		    }
	    }
	        
        location /hls {
        
            if ($arg_pass != 'abc123') {
                return 404;
            }

            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            
            root /opt/data;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        location /live {
            alias /opt/data/hls;
          
            if ($arg_pass != 'abc123') {
                return 404;
            }
          
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root /www/static;
        }

        location /crossdomain.xml {
            default_type text/xml;
            expires 24h;
        }
        
    }
}